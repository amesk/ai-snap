#
# -*- coding: utf-8 -*-
#
# Copyright (C) 2025 Alexei Eskenazi. All rights reserved
#
# AI-Snap utility
#
# Author: amesk <alexei.eskenazi@gmail.com>
#

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - release/**  # Trigger on branches starting with 'release/'
  pull_request:
    branches:
      - main

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      ai_snap_version: ${{ steps.set-version.outputs.ai_snap_version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set AI_SNAP_VERSION
      id: set-version
      run: |
        AI_SNAP_VERSION="1.0.${{ github.run_number }}"
        echo "AI_SNAP_VERSION=$AI_SNAP_VERSION" >> $GITHUB_ENV
        echo "::set-output name=ai_snap_version::$AI_SNAP_VERSION"

  build:
    needs: set-version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Use any Python 3.x version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev

    - name: Build the package
      run: |
        pipenv run wheel ${{ needs.set-version.outputs.ai_snap_version }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: dist/


  build-windows:
    needs: set-version
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev

    - name: Generate EXE
      run: pipenv run exe ${{ needs.set-version.outputs.ai_snap_version }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ai-snap-exe
        path: dist/

  publish:
    needs: set-version
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/')  # Only run on branches starting with 'release/'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Use any Python 3.x version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: package
        path: dist/

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pipenv run twine upload dist/*
